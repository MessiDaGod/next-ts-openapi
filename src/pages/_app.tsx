import "@/styles/globals.css";
import type { AppProps } from "next/app";
import Link from "next/link";
import styles from "@/styles/Home.module.scss";
import ConnectionDropdown from "./connectionDropdown";
import Head from "next/head";
import React, { useState, useEffect } from "react";
import { cn } from "./classNames";
import { useRouter } from "next/router";

interface SidebarItem {
  Name: string;
  Path: string;
  Icon: string;
  New?: boolean;
  Updated?: boolean;
}

interface TopBar {
  id: string;
  label: string;
  url: string;
}
interface Menu {
  sidebarItems: SidebarItem[];
  topBar: TopBar[];
}

export default function App({ Component, pageProps }: AppProps) {
  const router = useRouter();
  const [menu, setMenu] = useState<Menu | null>(null);
  const [collapsed, setCollapsed] = useState(false);

  useEffect(() => {
    async function fetchData() {
      fetch("/menu.json")
        .then((response) => response.json())
        .then((data) => setMenu(data));
    }
    fetchData();
  }, []);

  const handleCollapse = () => {
    setCollapsed(!collapsed);
  };

  function goHome(): void {
    router.push("/");
  }

  return (
    <>
      <Head>
        <title>Next App</title>
        <style>{`
    :root {
      --bg-color: #0d1117;
    }
    body {
      background-color: var(--bg-color);
    }
  `}</style>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/dog.png" />
      </Head>
      <nav>
        <>
          <div
            className={styles["dropdown"]}
            style={{ position: "relative", display: "inline-block" }}
          >
            <button
              className={`${styles["expandButton"]} ${
                collapsed ? styles.collapsed : styles.expanded
              }`}
              onClick={handleCollapse}
            >
              {collapsed ? (
                <span className="material-symbols-outlined">menu</span>
              ) : (
                <span className="material-symbols-outlined">menu</span>
              )}
            </button>
          </div>
          <nav
            className={`${styles["sidebar"]} ${
              collapsed ? styles.collapsed : styles.expanded
            }`}
          >
            <ul className={styles["ul"]}>
              {menu?.sidebarItems.map((item, index: number) => (
                <li key={index} className={styles["sidebar__item"]}>
                  <span className="material-symbols-outlined">{item.Icon}</span>
                  <a href={item.Path}>{item.Name}</a>
                </li>
              ))}
            </ul>
          </nav>
        </>
        <div className={styles["topbar"]}>
          <a
            type="button"
            className={styles.sitelogo}
            onClick={() => goHome()}
            style={{ justifyContent: "flex-start", paddingRight: "50px" }}
          >
            <span
              style={{
                fontSize: "24px",
                userSelect: "none",
                cursor: "pointer",
              }}
            >
              Shakely Consulting
            </span>
          </a>

          <div className={styles["linksContainer"]}>
            {menu?.topBar.map((item, index: number) => (
              <><Link key={item.id} className={styles["links"]} href={item.url}>
                {item.label}
              </Link>&nbsp;&nbsp;&nbsp;&nbsp;</>
            ))}
          </div>
          <ConnectionDropdown jsonFileName="connections" label="Connections" />
        </div>
        <div
          className={cn(
            styles["rz-body"],
            collapsed ? styles["body-retracted"] : ""
          )}
        >
          <main key="main">
            <Component {...pageProps} />
          </main>
        </div>
      </nav>
    </>
  );
}
